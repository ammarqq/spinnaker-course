Configure Jenkins
packer plugin
create jenkins job
configure spinnaker
deploy custom AMI's to AWS.



manage jenkins->manage plugins->search packer->restart jenkins
go to globL tool configuration->name: packer
name: packer 1.2.2
addational parameters: 
-machine-readable -var aws_access_key=AKIAIQUP4ZS6R7CXEEHQ  -var "aws_secret_key=your_aws_secret_key" 

now add installer
packer 1.2.2 linux amd

save it 

create new job
Build AMI
Free style project->post build action-packer->packer template text->

{
 "builders": [{
    "type": "amazon-ebs",
    "access_key": "{{user `aws_access_key`}}",
    "secret_key": "{{user `aws_secret_key`}}",
    "region": "us-east-1",
    "source_ami_filter": {
      "filters": {
      "virtualization-type": "hvm",
      "name": "ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*",
      "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t2.micro",
    "ssh_username": "ubuntu",
    "ami_name": "packer-example {{timestamp}}"
  }],

  "provisioners": [{
    "type": "shell",
    "inline": [
      "sudo apt-get update",
      "sudo apt-get install -y nginx"
    ]
  }],

  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true
    }
  ]
}

add another build--> archive artifact

files to archive: *.json


lets go to spinnaker
go to loadbalancer edit it

edit target port to 80

we need to update security groups
go to demoapp

demo-appe-ec2 edit inbound rules  allow trafffic to demo-app-alb
demo-app-alb tcp 80 80


create new pipline

JEnkins-AMI-bake

add stage->type: jenkins-->master: my-jenkins-master-->job: build AMI>propirtyFile: manifest.json


add another stage >type: deploy>depends on :jenkins >add server group: demo app-v005(us-eat-1)
save changes
before run pipline edit it as json

after account add this line "account": "my-aws-account", 
 "amiName": "${ #stage( 'Jenkins' )['context']['builds'][ #stage( 'Jenkins' )['context']['builds'].size() -1 ]['artifact_id'].split(':')[1] }",

start it manually
